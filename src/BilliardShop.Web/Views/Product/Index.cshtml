@model BilliardShop.Web.Models.ProductListViewModel
@{
    ViewData["Title"] = Model.CurrentCategory != null ? Model.CurrentCategory.TenDanhMuc : "Sản phẩm";
    ViewData["BodyId"] = "collection";
    ViewData["Template"] = "collection";
}

@section Styles {
    <link rel="stylesheet" href="~/template-collection.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/dt-facets.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/dt-price.css" asp-append-version="true" />

    <style>
        .collection-hero {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            padding: 60px 0;
            color: white;
            margin-bottom: 40px;
        }
        .collection-hero h1 {
            font-size: 42px;
            font-weight: 700;
            margin-bottom: 15px;
        }
        .collection-hero p {
            font-size: 18px;
            opacity: 0.9;
        }
        .breadcrumb-custom {
            background: transparent;
            padding: 20px 0;
        }
        .breadcrumb-custom a {
            color: #7f8c8d;
            text-decoration: none;
        }
        .breadcrumb-custom a:hover {
            color: #e74c3c;
        }
        .collection-wrapper {
            display: flex;
            gap: 30px;
        }
        .collection-sidebar {
            width: 280px;
            flex-shrink: 0;
        }
        .sidebar-block {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 25px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }
        .sidebar-block h3 {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 20px;
            color: #2c3e50;
        }
        .category-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        .category-list li {
            margin-bottom: 10px;
        }
        .category-list a {
            display: block;
            padding: 10px 15px;
            border-radius: 6px;
            color: #555;
            text-decoration: none;
            transition: all 0.3s;
        }
        .category-list a:hover,
        .category-list a.active {
            background: #e74c3c;
            color: white;
        }
        .collection-main {
            flex: 1;
        }
        .collection-toolbar {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }
        .filter-row {
            display: flex;
            gap: 15px;
            margin-bottom: 15px;
        }
        .filter-row input,
        .filter-row select {
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: 6px;
            flex: 1;
        }
        .btn-search {
            padding: 12px 30px;
            background: #e74c3c;
            color: white;
            border: none;
            border-radius: 6px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
        }
        .btn-search:hover {
            background: #c0392b;
        }
        .btn-reset {
            padding: 12px 30px;
            background: #95a5a6;
            color: white;
            border: none;
            border-radius: 6px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            text-decoration: none;
            display: inline-block;
        }
        .btn-reset:hover {
            background: #7f8c8d;
        }
        .product-count {
            color: #7f8c8d;
            margin-bottom: 20px;
        }
        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 30px;
        }
        .pagination-wrapper {
            margin-top: 50px;
            text-align: center;
        }
        .pagination-custom {
            display: inline-flex;
            gap: 10px;
            list-style: none;
            padding: 0;
        }
        .pagination-custom li a {
            display: block;
            padding: 10px 18px;
            background: white;
            border: 1px solid #ddd;
            border-radius: 6px;
            color: #555;
            text-decoration: none;
            transition: all 0.3s;
        }
        .pagination-custom li.active a,
        .pagination-custom li a:hover {
            background: #e74c3c;
            color: white;
            border-color: #e74c3c;
        }

        @@media (max-width: 992px) {
            .collection-wrapper {
                flex-direction: column;
            }
            .collection-sidebar {
                width: 100%;
            }
        }
    </style>
}

@* Breadcrumb *@
<div class="page-width breadcrumb-custom">
    <nav aria-label="breadcrumb">
        <a href="@Url.Action("Index", "Home")">Trang chủ</a>
        <span> / </span>
        @if (Model.CurrentCategory != null)
        {
            <span>@Model.CurrentCategory.TenDanhMuc</span>
        }
        else
        {
            <span>Sản phẩm</span>
        }
    </nav>
</div>

@* Collection Hero *@
@if (Model.CurrentCategory != null)
{
    <div class="collection-hero">
        <div class="page-width">
            <h1 class="wow fadeInUp">@Model.CurrentCategory.TenDanhMuc</h1>
            @if (!string.IsNullOrEmpty(Model.CurrentCategory.MoTa))
            {
                <p class="wow fadeInUp" data-wow-delay="0.2s">@Model.CurrentCategory.MoTa</p>
            }
        </div>
    </div>
}

<div class="page-width">
    <div class="collection-wrapper">
        @* Sidebar *@
        <aside class="collection-sidebar wow fadeInLeft">
            <div class="sidebar-block">
                <h3>Danh mục</h3>
                <ul class="category-list">
                    <li>
                        <a href="@Url.Action("Index", "Product")" class="@(Model.CurrentCategory == null ? "active" : "")">
                            Tất cả sản phẩm
                        </a>
                    </li>
                    @foreach (var category in Model.AllCategories)
                    {
                        <li>
                            <a href="@Url.Action("Index", "Product", new { categorySlug = category.DuongDanDanhMuc })"
                               class="@(Model.CurrentCategory?.Id == category.Id ? "active" : "")">
                                @category.TenDanhMuc
                            </a>
                        </li>
                    }
                </ul>
            </div>

            <div class="sidebar-block">
                <h3>Lọc theo giá</h3>
                <form asp-controller="Product" asp-action="Index" method="get">
                    <input type="hidden" name="categorySlug" value="@Model.CurrentCategory?.DuongDanDanhMuc" />
                    <div style="margin-bottom: 15px;">
                        <label style="font-size: 14px; color: #7f8c8d; margin-bottom: 5px; display: block;">Từ</label>
                        <input type="number" name="minPrice" placeholder="0 ₫" style="width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 6px;" min="0" step="10000">
                    </div>
                    <div style="margin-bottom: 15px;">
                        <label style="font-size: 14px; color: #7f8c8d; margin-bottom: 5px; display: block;">Đến</label>
                        <input type="number" name="maxPrice" placeholder="10,000,000 ₫" style="width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 6px;" min="0" step="10000">
                    </div>
                    <button type="submit" class="btn-search" style="width: 100%;">
                        <i class="fa fa-filter"></i> Lọc giá
                    </button>
                </form>
            </div>
        </aside>

        @* Main Content *@
        <div class="collection-main wow fadeInRight">
            @* Search Toolbar *@
            <div class="collection-toolbar">
                <form asp-controller="Product" asp-action="Search" method="get">
                    <div class="filter-row">
                        <input type="text" name="q" value="@Model.SearchTerm" placeholder="Tìm kiếm sản phẩm..." />
                        <input type="hidden" name="categorySlug" value="@Model.CurrentCategory?.DuongDanDanhMuc" />
                    </div>
                    <div style="display: flex; gap: 10px;">
                        <button type="submit" class="btn-search">
                            <i class="fa fa-search"></i> Tìm kiếm
                        </button>
                        <a href="@Url.Action("Index", "Product", new { categorySlug = Model.CurrentCategory?.DuongDanDanhMuc })" class="btn-reset">
                            <i class="fa fa-refresh"></i> Đặt lại
                        </a>
                    </div>
                </form>
            </div>

            @if (!string.IsNullOrEmpty(Model.SearchTerm))
            {
                <div style="background: #e8f5e9; padding: 15px; border-radius: 8px; margin-bottom: 25px; color: #2e7d32;">
                    <i class="fa fa-info-circle"></i> Kết quả tìm kiếm cho: <strong>@Model.SearchTerm</strong>
                </div>
            }

            <div class="product-count">
                Hiển thị <strong>@Model.Products.Count()</strong> trên <strong>@Model.TotalProducts</strong> sản phẩm
            </div>

            @* Product Grid *@
            <div class="product-grid">
                @foreach (var product in Model.Products)
                {
                    <div class="product-card-wrapper">
                        @if (product.GiaKhuyenMai.HasValue)
                        {
                            var discount = (int)((product.GiaGoc - product.GiaKhuyenMai.Value) / product.GiaGoc * 100);
                            <span class="product-badge">-@discount%</span>
                        }

                        <a href="@Url.Action("Details", "Product", new { slug = product.DuongDanSanPham })">
                            <div class="product-card-image">
                                @if (product.HinhAnhs.Any())
                                {
                                    <img src="@product.HinhAnhs.First().DuongDanHinhAnh" alt="@product.TenSanPham">
                                }
                                else
                                {
                                    <img src="~/product-placeholder.svg" alt="@product.TenSanPham">
                                }
                            </div>
                        </a>

                        <div class="product-card-content">
                            <a href="@Url.Action("Details", "Product", new { slug = product.DuongDanSanPham })" class="product-title">
                                @product.TenSanPham
                            </a>

                            @if (!string.IsNullOrEmpty(product.MoTaNgan))
                            {
                                <p class="product-description">
                                    @(product.MoTaNgan.Length > 80 ? product.MoTaNgan.Substring(0, 80) + "..." : product.MoTaNgan)
                                </p>
                            }

                            <div class="product-price">
                                @if (product.GiaKhuyenMai.HasValue)
                                {
                                    <span class="price-sale">@product.GiaKhuyenMai.Value.ToString("N0") ₫</span>
                                    <span class="price-regular">@product.GiaGoc.ToString("N0") ₫</span>
                                }
                                else
                                {
                                    <span class="price-sale">@product.GiaGoc.ToString("N0") ₫</span>
                                }
                            </div>

                            @if (product.SoLuongTonKho > 0)
                            {
                                <button class="btn-add-to-cart" onclick="addToCart(@product.Id)">
                                    <i class="fa fa-shopping-cart"></i> Thêm vào giỏ
                                </button>
                            }
                            else
                            {
                                <button class="btn-add-to-cart out-of-stock" disabled>
                                    Hết hàng
                                </button>
                            }
                        </div>
                    </div>
                }
            </div>

            @* Pagination *@
            @if (Model.TotalPages > 1)
            {
                <div class="pagination-wrapper">
                    <ul class="pagination-custom">
                        @if (Model.CurrentPage > 1)
                        {
                            <li>
                                <a href="@Url.Action("Index", "Product", new { categorySlug = Model.CurrentCategory?.DuongDanDanhMuc, page = Model.CurrentPage - 1 })">
                                    <i class="fa fa-angle-left"></i> Trước
                                </a>
                            </li>
                        }

                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="@(i == Model.CurrentPage ? "active" : "")">
                                <a href="@Url.Action("Index", "Product", new { categorySlug = Model.CurrentCategory?.DuongDanDanhMuc, page = i })">
                                    @i
                                </a>
                            </li>
                        }

                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li>
                                <a href="@Url.Action("Index", "Product", new { categorySlug = Model.CurrentCategory?.DuongDanDanhMuc, page = Model.CurrentPage + 1 })">
                                    Sau <i class="fa fa-angle-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <style>
        .product-card-wrapper {
            position: relative;
            border-radius: 12px;
            overflow: hidden;
            background: white;
            box-shadow: 0 4px 15px rgba(0,0,0,0.08);
            transition: all 0.3s;
        }
        .product-card-wrapper:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }
        .product-card-image {
            position: relative;
            height: 300px;
            overflow: hidden;
        }
        .product-card-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s;
        }
        .product-card-wrapper:hover .product-card-image img {
            transform: scale(1.05);
        }
        .product-badge {
            position: absolute;
            top: 15px;
            right: 15px;
            background: #e74c3c;
            color: white;
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            z-index: 1;
        }
        .product-card-content {
            padding: 20px;
        }
        .product-title {
            font-size: 18px;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 10px;
            text-decoration: none;
            display: block;
        }
        .product-title:hover {
            color: #e74c3c;
        }
        .product-description {
            color: #7f8c8d;
            font-size: 14px;
            margin-bottom: 15px;
            line-height: 1.5;
        }
        .product-price {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 15px;
        }
        .price-sale {
            font-size: 22px;
            font-weight: 700;
            color: #e74c3c;
        }
        .price-regular {
            font-size: 16px;
            color: #95a5a6;
            text-decoration: line-through;
        }
        .btn-add-to-cart {
            width: 100%;
            padding: 12px;
            background: #2c3e50;
            color: white;
            border: none;
            border-radius: 6px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
        }
        .btn-add-to-cart:hover {
            background: #34495e;
        }
        .out-of-stock {
            background: #95a5a6;
            cursor: not-allowed;
        }
    </style>

    <script>
        function addToCart(productId) {
            console.log('Adding product to cart:', productId);
            alert('Sản phẩm đã được thêm vào giỏ hàng!');
        }
    </script>
}
